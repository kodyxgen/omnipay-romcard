<?php

namespace Paytic\Omnipay\Romcard\Message\Traits;

use Paytic\Omnipay\Romcard\Helper;
use DateTime;

trait BaseParamsResponseTrait
{

    /**
     * Is the response successful?
     *
     * @return boolean
     */
    public function isSuccessful()
    {
        return $this->getAction() == Helper::ACTION_APPROVED;
    }

    public function getAction()
    {
        return $this->hasDataProperty('ACTION') ? $this->getDataProperty('ACTION') : null;
    }

    /** @noinspection PhpMissingParentCallCommonInspection
     * @inheritdoc
     */
    public function getCode()
    {
        return $this->getAction();
    }

    /**
     * @return string
     */
    public function getTransactionType()
    {
        return $this->hasDataProperty('TRTYPE') ? $this->getDataProperty('TRTYPE') : null;
    }

    /** @noinspection PhpMissingParentCallCommonInspection
     * @inheritdoc
     */
    public function getCardReference()
    {
        return $this->hasDataProperty('RRN') ? $this->getDataProperty('RRN') : null;
    }

    public function getTransactionReference()
    {
        return $this->hasDataProperty('INT_REF') ? $this->getDataProperty('INT_REF') : null;
    }

    /** @noinspection PhpMissingParentCallCommonInspection
     * Get the transaction ID as generated by the merchant website.
     *
     * @return string
     */
    public function getTransactionId()
    {
        return $this->hasDataProperty('ORDER') ? $this->getDataProperty('ORDER') : null;
    }

    /** @noinspection PhpMissingParentCallCommonInspection
     * @return false|string
     */
    public function getTransactionDate()
    {
        if (!$this->hasDataProperty('TIMESTAMP')) {
            return null;
        }
        $timestamp = $this->getDataProperty('TIMESTAMP');
        $dateTime = DateTime::createFromFormat('YmdHis', $timestamp);

        return $dateTime->format('Y-m-d H:i:s');
    }

    /**
     * Response Message
     *
     * @return null|string A response message from the payment gateway
     */
    public function getMessage()
    {
        return $this->hasDataProperty('MESSAGE') ? $this->getDataProperty('MESSAGE') : null;
    }

}